apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ print .Values.APP.NAME "-romulus" }}
  namespace: {{ .Values.APP.NAMESPACE }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.APP.NAME }} 
      name: romulus
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ .Values.APP.NAME }} 
        name: romulus
        azure.workload.identity/use: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        dapr.io/enabled: "true"
        dapr.io/config: {{ print .Values.APP.NAME "-config" | quote }}
        dapr.io/app-id: {{ print .Values.APP.NAME "-romulus" | quote }}
        dapr.io/app-port: "8001"
        dapr.io/log-level: "info"
        dapr.io/http-max-request-size: "512"                
    spec:
      serviceAccountName: {{ .Values.WORKLOAD_ID.NAME }}
      containers:
      - name: romulus
        image:  {{ print .Values.ACR.NAME "/" .Values.APP.NAMESPACE "/" .Values.APP.NAME "-romulus:" .Values.APP.VERSION }} 
        imagePullPolicy: Always
        env:
        - name: OPENAI_API_ENDPOINT
          value: {{ print .Values.OPENAI.ENDPOINT }}
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key:  {{ .Values.KEYVAULT.SECRETS.AOAI }}
        - name: OPENAI_API_VERSION
          value: {{ .Values.OPENAI.API_VERSION }}  
        - name: OPENAI_DEPLOYMENT_NAME
          value: {{ .Values.OPENAI.DEPLOYMENT_NAME }}        
        ports:
        - containerPort: 8001
        - containerPort: 9090
        resources:
          limits:
            memory: "512Mi"
            cpu: "2"
          requests:
            memory: "128Mi"
            cpu: "0.5"
        volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"                       
            readOnly: true  
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.KEYVAULT.SECRETS.AOAI }}             
---
apiVersion: v1
kind: Service
metadata:
  name: {{ print .Values.APP.NAME "-romulus-svc" | quote }}
  namespace: {{ .Values.APP.NAMESPACE }}
spec:
  selector:
    app: {{ .Values.APP.NAME }} 
    name: romulus
  ports:
  - port: 80
    targetPort: 8001
    name: web
  - port: 9090
    targetPort: 9090
    name: metrics    
  type: ClusterIP
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name:  {{ print .Values.APP.NAME "-romulus-vs" | quote }}
  namespace: {{ .Values.APP.NAMESPACE }}
spec:
  hosts:
  -  "*"
  gateways:
  -  {{ .Values.ISTIO.GATEWAY }}
  http:
  - route:
    - destination:
        host: {{ print .Values.APP.NAME "-romulus-svc" | quote }}
        port:
          number: 80
    corsPolicy:          
      allowMethods:
      - POST
      - PUT
      - GET
      - OPTIONS
      allowOrigins:
      - regex: 'https?://(?:[\w-]+\.)*(azurestaticapps\.net|azure-api\.net)(?:/[\w\-./?%&=]*)?'
      unmatchedPreflights: FORWARD