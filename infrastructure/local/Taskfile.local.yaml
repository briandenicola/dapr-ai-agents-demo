version: "3"

vars:
  LOCAL_TITLE: "{{.TITLE}} (local)"
  LOCAL_REGION: eastus2

tasks:  
  default:
    cmds:
      - task --list

  init:
    internal: true
    run: once
    cmds: 
    - dapr uninstall
    - dapr init
    - terraform workspace new {{.REGION}} || true
    - terraform workspace select {{.REGION}}
    - terraform init
    vars:
      REGION: "{{default .LOCAL_REGION .CLI_ARGS}}"
  
  env:
    desc: Preps virtual environment
    dir: ../../src/api
    run: when_changed
    cmds: 
    - python3.10 -m venv .venv &&
      source .venv/bin/activate &&
      pip install -r requirements.txt

  up:
    desc: Creates a Development Environment for {{.LOCAL_TITLE}}
    deps:
      - task: init
    cmds:
      - task: apply

  apply:
    desc: Applies Terraform configuration for {{.LOCAL_TITLE}}
    cmds:
      - terraform apply -auto-approve -compact-warnings
        -var "region={{.REGION}}"
        -var "tags={{.LOCAL_TITLE}}"
    vars:
      REGION: "{{default .LOCAL_REGION .CLI_ARGS}}"

  refresh:
    desc: Refreshes Terraform configuration for {{.LOCAL_TITLE}}
    cmds:
      - terraform refresh
        -var "region={{.REGION}}"
        -var "tags={{.LOCAL_TITLE}}"
    vars:
      REGION: "{{default .LOCAL_REGION .CLI_ARGS}}"

  creds: 
    desc: Outputs Open AI Endpoint and KEY to .env file
    cmds:
    - cmd: export OPENAI_API_ENDPOINT="{{.AOI_ENDPOINT}}" ; 
           export OPENAI_API_KEY="{{.AOI_KEY}}" ; 
           export OPENAI_DEPLOYMENT_NAME="{{.OPENAI_DEPLOYMENT_NAME}}" ; 
           export OPENAI_API_VERSION="{{.OPENAI_API_VERSION}}" ; 
           envsubst < ../../src/api/.env.sample > ../../src/api/.env
      silent: true
    vars:
      AOI_ENDPOINT:
        sh: terraform output -raw OPENAI_ENDPOINT
      AOI_KEY: 
        sh: terraform output -raw OPENAI_PRIMARY_KEY

  run:
    desc: Starts dapr and runs the application 
    dir: ../../scripts
    deps:
    - task: aspire
    cmds: 
    - bash ./dapr-local.sh

  debug:
    internal: true
    desc: Starts Aspire Dashboard
    run: once
    cmds: 
    - docker run --rm -p 18888:18888 -p 4317:18889 -d --name aspire-dashboard  mcr.microsoft.com/dotnet/aspire-dashboard:8.1.0 > /dev/null 2>&1 || true
    - docker run --rm -p 5540:5540  -d --name redisinsight redis/redisinsight:latest > /dev/null 2>&1 || true

  down:
    desc: Destroys all resources and cleans up Terraform for {{.LOCAL_TITLE}}
    cmds:
      - az group list --tag Application="{{.LOCAL_TITLE}}" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --no-wait -n || true
      - rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
